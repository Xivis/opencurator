{
  "contractName": "RegistryFactory",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_baseRegistry",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "registry",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "_RegistryCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "parameter",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "_BasicParameterUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenName",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_parameters",
          "type": "uint256[]"
        },
        {
          "name": "_registryName",
          "type": "string"
        },
        {
          "name": "_description",
          "type": "string"
        },
        {
          "name": "_acceptedDataType",
          "type": "string"
        }
      ],
      "name": "newSimpleTCR",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newRegistry",
          "type": "address"
        }
      ],
      "name": "setBaseRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806125e083398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506124a0806101406000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063201114291461009357806330f116ec146100d6578063715018a6146102e75780638abc95e9146102fe5780638da5cb5b146103555780638f32d59b146103ac578063f2fde38b146103db578063f4325d671461041e575b600080fd5b34801561009f57600080fd5b506100d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610475565b005b3480156100e257600080fd5b506102a5600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803560ff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610568565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f357600080fd5b506102fc610aa4565b005b34801561030a57600080fd5b50610313610b76565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036157600080fd5b5061036a610b9c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103b857600080fd5b506103c1610bc5565b604051808215151515815260200191505060405180910390f35b3480156103e757600080fd5b5061041c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c1c565b005b34801561042a57600080fd5b50610433610c3b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61047d610bc5565b151561048857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc7fe5223e50a245d026c6b4e3caac1b3df14d3e3a27bd85a14c7ade7b1a288a28160405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252600c8152602001807f62617365526567697374727900000000000000000000000000000000000000008152506020019250505060405180910390a150565b6000806000610598600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c61565b915089888a6105a5610dc4565b8080602001806020018460ff1660ff168152602001838103835286818151815260200191508051906020019080838360005b838110156105f25780820151818401526020810190506105d7565b50505050905090810190601f16801561061f5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561065857808201518184015260208101905061063d565b50505050905090810190601f1680156106855780820380516001836020036101000a031916815260200191505b5095505050505050604051809103906000f0801580156106a9573d6000803e3d6000fd5b5090508173ffffffffffffffffffffffffffffffffffffffff1663e94c41cc878787858c6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200185810385528a818151815260200191508051906020019080838360005b8381101561077657808201518184015260208101905061075b565b50505050905090810190601f1680156107a35780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b838110156107dc5780820151818401526020810190506107c1565b50505050905090810190601f1680156108095780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b83811015610842578082015181840152602081019050610827565b50505050905090810190601f16801561086f5780820380516001836020036101000a031916815260200191505b50858103825286818151815260200191508051906020019060200280838360005b838110156108ab578082015181840152602081019050610890565b505050509050019950505050505050505050600060405180830381600087803b1580156108d757600080fd5b505af11580156108eb573d6000803e3d6000fd5b505050507fcf9fe6ff518d38d7f5b35599e539c5b42fb2dcb83fbdb87a35476d1f973ed5493382848989604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156109ef5780820151818401526020810190506109d4565b50505050905090810190601f168015610a1c5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610a55578082015181840152602081019050610a3a565b50505050905090810190601f168015610a825780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a18192505050979650505050505050565b610aac610bc5565b1515610ab757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610c24610bc5565b1515610c2f57600080fd5b610c3881610cca565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060405182600b82015276603160008181600b9039f360008080808036809280377360098203527f5af43d828181803e808314602f57f35bfd000000000000000000000000000000602b820152603c816000f09150813b1515610cc457600080fd5b50919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d0657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040516116a080610dd583390190560060806040523480156200001157600080fd5b50604051620016a0380380620016a0833981018060405281019080805182019291906020018051820192919060200180519060200190929190505050826003908051906020019062000065929190620000a3565b5081600490805190602001906200007e929190620000a3565b5080600560006101000a81548160ff021916908360ff16021790555050505062000152565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620000e657805160ff191683800117855562000117565b8280016001018555821562000117579182015b8281111562000116578251825591602001919060010190620000f9565b5b5090506200012691906200012a565b5090565b6200014f91905b808211156200014b57600081600090555060010162000131565b5090565b90565b61153e80620001626000396000f3006080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100ca578063095ea7b31461015a57806318160ddd146101bf57806323b872dd146101ea578063313ce5671461026f57806339509351146102a057806370a082311461030557806395d89b411461035c578063a457c2d7146103ec578063a6f2ae3a14610451578063a9059cbb14610473578063dd62ed3e146104d8578063e4849b321461054f575b600080fd5b3480156100d657600080fd5b506100df610587565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011f578082015181840152602081019050610104565b50505050905090810190601f16801561014c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016657600080fd5b506101a5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610629565b604051808215151515815260200191505060405180910390f35b3480156101cb57600080fd5b506101d4610756565b6040518082815260200191505060405180910390f35b3480156101f657600080fd5b50610255600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610760565b604051808215151515815260200191505060405180910390f35b34801561027b57600080fd5b50610284610968565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102ac57600080fd5b506102eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061097f565b604051808215151515815260200191505060405180910390f35b34801561031157600080fd5b50610346600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bb6565b6040518082815260200191505060405180910390f35b34801561036857600080fd5b50610371610bfe565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b1578082015181840152602081019050610396565b50505050905090810190601f1680156103de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103f857600080fd5b50610437600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ca0565b604051808215151515815260200191505060405180910390f35b610459610ed7565b604051808215151515815260200191505060405180910390f35b34801561047f57600080fd5b506104be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eee565b604051808215151515815260200191505060405180910390f35b3480156104e457600080fd5b50610539600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f05565b6040518082815260200191505060405180910390f35b61056d60048036038101908080359060200190929190505050610f8c565b604051808215151515815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561061f5780601f106105f45761010080835404028352916020019161061f565b820191906000526020600020905b81548152906001019060200180831161060257829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561066657600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b60006107f182600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461103290919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061087c848484611053565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b6000600560009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156109bc57600080fd5b610a4b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121f90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c965780601f10610c6b57610100808354040283529160200191610c96565b820191906000526020600020905b815481529060010190602001808311610c7957829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610cdd57600080fd5b610d6c82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461103290919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610ee7336103e83402611240565b6001905090565b6000610efb338484611053565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080610fa46103e88461139490919063ffffffff16565b9050803073ffffffffffffffffffffffffffffffffffffffff163110151515610fcc57600080fd5b610fd7333085611053565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561101d573d6000803e3d6000fd5b5061102830846113be565b6001915050919050565b60008083831115151561104457600080fd5b82840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561108f57600080fd5b6110e0816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461103290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611173816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015151561123657600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561127c57600080fd5b6112918160025461121f90919063ffffffff16565b6002819055506112e8816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000806000831115156113a657600080fd5b82848115156113b157fe5b0490508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156113fa57600080fd5b61140f8160025461103290919063ffffffff16565b600281905550611466816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461103290919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505600a165627a7a72305820b0c6a8bfa2836d58cde8851407e655f12e4626ec3a87da06519e36ba1eb3040c0029a165627a7a723058200d27ee71e79ecc99c4b9c62cb2a6ffdf0d86c06101ba05a84ef6cca2884382330029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063201114291461009357806330f116ec146100d6578063715018a6146102e75780638abc95e9146102fe5780638da5cb5b146103555780638f32d59b146103ac578063f2fde38b146103db578063f4325d671461041e575b600080fd5b34801561009f57600080fd5b506100d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610475565b005b3480156100e257600080fd5b506102a5600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803560ff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610568565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f357600080fd5b506102fc610aa4565b005b34801561030a57600080fd5b50610313610b76565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036157600080fd5b5061036a610b9c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103b857600080fd5b506103c1610bc5565b604051808215151515815260200191505060405180910390f35b3480156103e757600080fd5b5061041c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c1c565b005b34801561042a57600080fd5b50610433610c3b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61047d610bc5565b151561048857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc7fe5223e50a245d026c6b4e3caac1b3df14d3e3a27bd85a14c7ade7b1a288a28160405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252600c8152602001807f62617365526567697374727900000000000000000000000000000000000000008152506020019250505060405180910390a150565b6000806000610598600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c61565b915089888a6105a5610dc4565b8080602001806020018460ff1660ff168152602001838103835286818151815260200191508051906020019080838360005b838110156105f25780820151818401526020810190506105d7565b50505050905090810190601f16801561061f5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561065857808201518184015260208101905061063d565b50505050905090810190601f1680156106855780820380516001836020036101000a031916815260200191505b5095505050505050604051809103906000f0801580156106a9573d6000803e3d6000fd5b5090508173ffffffffffffffffffffffffffffffffffffffff1663e94c41cc878787858c6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200185810385528a818151815260200191508051906020019080838360005b8381101561077657808201518184015260208101905061075b565b50505050905090810190601f1680156107a35780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b838110156107dc5780820151818401526020810190506107c1565b50505050905090810190601f1680156108095780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b83811015610842578082015181840152602081019050610827565b50505050905090810190601f16801561086f5780820380516001836020036101000a031916815260200191505b50858103825286818151815260200191508051906020019060200280838360005b838110156108ab578082015181840152602081019050610890565b505050509050019950505050505050505050600060405180830381600087803b1580156108d757600080fd5b505af11580156108eb573d6000803e3d6000fd5b505050507fcf9fe6ff518d38d7f5b35599e539c5b42fb2dcb83fbdb87a35476d1f973ed5493382848989604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156109ef5780820151818401526020810190506109d4565b50505050905090810190601f168015610a1c5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610a55578082015181840152602081019050610a3a565b50505050905090810190601f168015610a825780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a18192505050979650505050505050565b610aac610bc5565b1515610ab757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610c24610bc5565b1515610c2f57600080fd5b610c3881610cca565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060405182600b82015276603160008181600b9039f360008080808036809280377360098203527f5af43d828181803e808314602f57f35bfd000000000000000000000000000000602b820152603c816000f09150813b1515610cc457600080fd5b50919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d0657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040516116a080610dd583390190560060806040523480156200001157600080fd5b50604051620016a0380380620016a0833981018060405281019080805182019291906020018051820192919060200180519060200190929190505050826003908051906020019062000065929190620000a3565b5081600490805190602001906200007e929190620000a3565b5080600560006101000a81548160ff021916908360ff16021790555050505062000152565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620000e657805160ff191683800117855562000117565b8280016001018555821562000117579182015b8281111562000116578251825591602001919060010190620000f9565b5b5090506200012691906200012a565b5090565b6200014f91905b808211156200014b57600081600090555060010162000131565b5090565b90565b61153e80620001626000396000f3006080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100ca578063095ea7b31461015a57806318160ddd146101bf57806323b872dd146101ea578063313ce5671461026f57806339509351146102a057806370a082311461030557806395d89b411461035c578063a457c2d7146103ec578063a6f2ae3a14610451578063a9059cbb14610473578063dd62ed3e146104d8578063e4849b321461054f575b600080fd5b3480156100d657600080fd5b506100df610587565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011f578082015181840152602081019050610104565b50505050905090810190601f16801561014c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016657600080fd5b506101a5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610629565b604051808215151515815260200191505060405180910390f35b3480156101cb57600080fd5b506101d4610756565b6040518082815260200191505060405180910390f35b3480156101f657600080fd5b50610255600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610760565b604051808215151515815260200191505060405180910390f35b34801561027b57600080fd5b50610284610968565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102ac57600080fd5b506102eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061097f565b604051808215151515815260200191505060405180910390f35b34801561031157600080fd5b50610346600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bb6565b6040518082815260200191505060405180910390f35b34801561036857600080fd5b50610371610bfe565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b1578082015181840152602081019050610396565b50505050905090810190601f1680156103de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103f857600080fd5b50610437600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ca0565b604051808215151515815260200191505060405180910390f35b610459610ed7565b604051808215151515815260200191505060405180910390f35b34801561047f57600080fd5b506104be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eee565b604051808215151515815260200191505060405180910390f35b3480156104e457600080fd5b50610539600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f05565b6040518082815260200191505060405180910390f35b61056d60048036038101908080359060200190929190505050610f8c565b604051808215151515815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561061f5780601f106105f45761010080835404028352916020019161061f565b820191906000526020600020905b81548152906001019060200180831161060257829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561066657600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b60006107f182600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461103290919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061087c848484611053565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b6000600560009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156109bc57600080fd5b610a4b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121f90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c965780601f10610c6b57610100808354040283529160200191610c96565b820191906000526020600020905b815481529060010190602001808311610c7957829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610cdd57600080fd5b610d6c82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461103290919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610ee7336103e83402611240565b6001905090565b6000610efb338484611053565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080610fa46103e88461139490919063ffffffff16565b9050803073ffffffffffffffffffffffffffffffffffffffff163110151515610fcc57600080fd5b610fd7333085611053565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561101d573d6000803e3d6000fd5b5061102830846113be565b6001915050919050565b60008083831115151561104457600080fd5b82840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561108f57600080fd5b6110e0816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461103290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611173816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015151561123657600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561127c57600080fd5b6112918160025461121f90919063ffffffff16565b6002819055506112e8816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000806000831115156113a657600080fd5b82848115156113b157fe5b0490508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156113fa57600080fd5b61140f8160025461103290919063ffffffff16565b600281905550611466816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461103290919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505600a165627a7a72305820b0c6a8bfa2836d58cde8851407e655f12e4626ec3a87da06519e36ba1eb3040c0029a165627a7a723058200d27ee71e79ecc99c4b9c62cb2a6ffdf0d86c06101ba05a84ef6cca2884382330029",
  "sourceMap": "86:3627:2:-;;;479:89;8:9:-1;5:2;;;30:1;27;20:12;5:2;479:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:10:8;516:6;;:19;;;;;;;;;;;;;;;;;;583:6;;;;;;;;;;;550:40;;579:1;550:40;;;;;;;;;;;;548:13:2;533:12;;:28;;;;;;;;;;;;;;;;;;479:89;86:3627;;;;;;",
  "deployedSourceMap": "86:3627:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2250:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2250:188:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:827;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:827:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:137:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:137:8;;;;;;358:29:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;660:77:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:77:8;;;;;;;;;;;;;;;;;;;;;;;;;;;980:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;980:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1656:107:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;393:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2250:188;864:9:8;:7;:9::i;:::-;856:18;;;;;;;;2343:12:2;2328;;:27;;;;;;;;;;;;;;;;;;2370:61;2417:12;2370:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2250:188;:::o;1273:827::-;1514:6;1563:18;1669:27;1594:31;1612:12;;;;;;;;;;;1594:17;:31::i;:::-;1563:63;;1717:10;1729:7;1738:9;1699:49;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1699:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1699:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1699:49:2;1669:79;;1881:8;:13;;;1895;1910:12;1924:17;1943:13;1958:11;1881:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1881:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1881:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1881:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1881:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1881:89:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1881:89:2;;;;1986:82;2003:10;2015:13;2030:8;2040:13;2055:12;1986:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1986:82:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1986:82:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2085:8;2078:15;;1273:827;;;;;;;;;;;:::o;1348:137:8:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1446:1;1409:40;;1430:6;;;;;;;;;;;1409:40;;;;;;;;;;;;1476:1;1459:6;;:19;;;;;;;;;;;;;;;;;;1348:137::o;358:29:2:-;;;;;;;;;;;;;:::o;660:77:8:-;698:7;724:6;;;;;;;;;;;717:13;;660:77;:::o;980:90::-;1020:4;1057:6;;;;;;;;;;;1043:20;;:10;:20;;;1036:27;;980:90;:::o;1656:107::-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1728:28;1747:8;1728:18;:28::i;:::-;1656:107;:::o;393:26:2:-;;;;;;;;;;;;;:::o;2737:974::-;2798:19;2944:4;2938:11;3118:7;3111:4;3097:12;3093:23;3086:40;3278:66;3271:4;3257:12;3253:23;3246:99;3445:66;3438:4;3424:12;3420:23;3413:99;3598:2;3584:12;3581:1;3574:27;3559:42;;3637:11;3625:24;3618:32;3615:2;;;3679:1;3676;3669:12;3615:2;2837:868;;;;:::o;1907:183:8:-;2000:1;1980:22;;:8;:22;;;;1972:31;;;;;;;;2047:8;2018:38;;2039:6;;;;;;;;;;;2018:38;;;;;;;;;;;;2075:8;2066:6;;:17;;;;;;;;;;;;;;;;;;1907:183;:::o;86:3627:2:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./SimpleTCR.sol\";\nimport \"./zeppelin/Ownable.sol\";\n\ncontract RegistryFactory is Ownable {\n\n    event _RegistryCreated(address creator, IERC20 token, ITCR20 registry, string name, string description);\n    event _BasicParameterUpdated(string parameter, address newAddress);\n\n    // Registry factory libs and base registry\n    SimpleTCR public baseRegistry;\n    IERC20 public reserveToken;\n\n    /// @dev constructor deploys a new proxyFactory.\n    constructor(SimpleTCR _baseRegistry) public {\n        baseRegistry = _baseRegistry;\n    }\n\n    /**\n     * Create a new SimpleTCR (with the associated Bonded Token and Voting contracts)\n     * @dev ~ 2850000 gas\n     * @param _tokenName The name of the associated Token (usually the same name of the Registry)\n     * @param _decimals The number of decimals (eg: 18) of the associated Token\n     * @param _symbol The symbol (eg: DT-RBT) of the associated Token\n     * @param _parameters Initial parameters: [minDeposit, applyStageLength, voteStageLength, dispensationPct]\n     * @param _registryName Main name of the registry\n     * @param _description description of the registry\n     * @param _acceptedDataType accepted data type of the registry\n     * @return The created Registry\n     */\n    function newSimpleTCR(\n        string _tokenName,\n        uint8 _decimals,\n        string _symbol,\n        uint[] _parameters,\n        string _registryName,\n        string _description,\n        string _acceptedDataType\n    ) public returns (ITCR20) {\n        // Create new registry\n        SimpleTCR registry = SimpleTCR(deployNewRegistry(baseRegistry));\n\n        // Creates a new IERC20\n        ERC20Tradable tradableToken = new ERC20Tradable(_tokenName, _symbol, _decimals);\n\n        //SimpleTCR registry = new SimpleTCR(_registryName, _description, _acceptedDataType, tradableToken, _parameters);\n        registry.init(_registryName, _description, _acceptedDataType, tradableToken, _parameters);\n\n        emit _RegistryCreated(msg.sender, tradableToken, registry, _registryName, _description);\n        return registry;\n    }\n\n\n    /**\n     * Set the base Registry to be use in all future Registry creations\n     * @param _newRegistry Any Registry implementation\n     */\n    function setBaseRegistry(SimpleTCR _newRegistry) onlyOwner external {\n        baseRegistry = _newRegistry;\n        emit _BasicParameterUpdated('baseRegistry', address(_newRegistry));\n    }\n\n    /**\n     * Deploy a Copy of a contract supplied\n     * @dev THIS COULD BE REPLACED WITH A \"new Target()\" BUT FOR SOME REASON CONSUMES A LOT OF MORE GAS IN DEPLOYMENT\n     * @param _target The base contract to me copy\n     * @return newContract address of the new deployed contract\n     */\n    function deployNewRegistry(address _target) private returns (address newContract){\n        assembly {\n        // Find empty storage location using \"free memory pointer\"\n            let contractCode := mload(0x40)\n\n        // Add target address, with a 11 bytes [i.e. 23 - (32 - 20)] offset to later accomodate first part of the bytecode\n            mstore(add(contractCode, 0x0b), _target)\n\n        // First part of the bytecode, shifted left by 9 bytes, overwrites left padding of target address\n            mstore(sub(contractCode, 0x09), 0x000000000000000000603160008181600b9039f3600080808080368092803773)\n\n        // Final part of bytecode, offset by 43 bytes\n            mstore(add(contractCode, 0x2b), 0x5af43d828181803e808314602f57f35bfd000000000000000000000000000000)\n\n        // total length 60 bytes\n            newContract := create(0, contractCode, 60)\n\n            if iszero(extcodesize(newContract)) {\n                revert(0, 0)\n            }\n        }\n    }\n}\n\n\n",
  "sourcePath": "/Users/ramirogonzalez/Xivis/sandbox/blockchain/opencurator/contracts/RegistryFactory.sol",
  "ast": {
    "absolutePath": "/Users/ramirogonzalez/Xivis/sandbox/blockchain/opencurator/contracts/RegistryFactory.sol",
    "exportedSymbols": {
      "RegistryFactory": [
        388
      ]
    },
    "id": 389,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 264,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/ramirogonzalez/Xivis/sandbox/blockchain/opencurator/contracts/SimpleTCR.sol",
        "file": "./SimpleTCR.sol",
        "id": 265,
        "nodeType": "ImportDirective",
        "scope": 389,
        "sourceUnit": 2076,
        "src": "26:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ramirogonzalez/Xivis/sandbox/blockchain/opencurator/contracts/zeppelin/Ownable.sol",
        "file": "./zeppelin/Ownable.sol",
        "id": 266,
        "nodeType": "ImportDirective",
        "scope": 389,
        "sourceUnit": 2872,
        "src": "52:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 267,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2871,
              "src": "114:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2871",
                "typeString": "contract Ownable"
              }
            },
            "id": 268,
            "nodeType": "InheritanceSpecifier",
            "src": "114:7:2"
          }
        ],
        "contractDependencies": [
          2693,
          2871
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 388,
        "linearizedBaseContracts": [
          388,
          2871
        ],
        "name": "RegistryFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 280,
            "name": "_RegistryCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "indexed": false,
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "152:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "152:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 272,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "169:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2762",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 271,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2762,
                    "src": "169:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2762",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 274,
                  "indexed": false,
                  "name": "registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "183:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITCR20_$205",
                    "typeString": "contract ITCR20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 273,
                    "name": "ITCR20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 205,
                    "src": "183:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITCR20_$205",
                      "typeString": "contract ITCR20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 276,
                  "indexed": false,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "200:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "213:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "151:81:2"
            },
            "src": "129:104:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 286,
            "name": "_BasicParameterUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "indexed": false,
                  "name": "parameter",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "267:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "indexed": false,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "285:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "285:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "266:38:2"
            },
            "src": "238:67:2"
          },
          {
            "constant": false,
            "id": 288,
            "name": "baseRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 388,
            "src": "358:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SimpleTCR_$2075",
              "typeString": "contract SimpleTCR"
            },
            "typeName": {
              "contractScope": null,
              "id": 287,
              "name": "SimpleTCR",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2075,
              "src": "358:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                "typeString": "contract SimpleTCR"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 290,
            "name": "reserveToken",
            "nodeType": "VariableDeclaration",
            "scope": 388,
            "src": "393:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2762",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 289,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2762,
              "src": "393:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2762",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "523:45:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 295,
                      "name": "baseRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "533:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                        "typeString": "contract SimpleTCR"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 296,
                      "name": "_baseRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "548:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                        "typeString": "contract SimpleTCR"
                      }
                    },
                    "src": "533:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "533:28:2"
                }
              ]
            },
            "documentation": "@dev constructor deploys a new proxyFactory.",
            "id": 300,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "name": "_baseRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "491:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                    "typeString": "contract SimpleTCR"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 291,
                    "name": "SimpleTCR",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2075,
                    "src": "491:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:25:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:2"
            },
            "scope": 388,
            "src": "479:89:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "1522:578:2",
              "statements": [
                {
                  "assignments": [
                    321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 321,
                      "name": "registry",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "1563:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                        "typeString": "contract SimpleTCR"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 320,
                        "name": "SimpleTCR",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2075,
                        "src": "1563:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                          "typeString": "contract SimpleTCR"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 327,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 324,
                            "name": "baseRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "1612:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                              "typeString": "contract SimpleTCR"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                              "typeString": "contract SimpleTCR"
                            }
                          ],
                          "id": 323,
                          "name": "deployNewRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "1594:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) returns (address)"
                          }
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1594:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 322,
                      "name": "SimpleTCR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2075,
                      "src": "1584:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_SimpleTCR_$2075_$",
                        "typeString": "type(contract SimpleTCR)"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1563:63:2"
                },
                {
                  "assignments": [
                    329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 329,
                      "name": "tradableToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "1669:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                        "typeString": "contract ERC20Tradable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 328,
                        "name": "ERC20Tradable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2693,
                        "src": "1669:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 336,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 332,
                        "name": "_tokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "1717:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 333,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "1729:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 334,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 304,
                        "src": "1738:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1699:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20Tradable_$2693_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ERC20Tradable)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 330,
                        "name": "ERC20Tradable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2693,
                        "src": "1703:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        }
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1699:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                      "typeString": "contract ERC20Tradable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1669:79:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 340,
                        "name": "_registryName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "1895:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 341,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "1910:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 342,
                        "name": "_acceptedDataType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "1924:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "tradableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "1943:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "_parameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "1958:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 337,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "1881:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                          "typeString": "contract SimpleTCR"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 639,
                      "src": "1881:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address,uint256[] memory) external"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1881:89:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:89:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3014,
                          "src": "2003:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2003:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "tradableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "2015:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 351,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "2030:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                          "typeString": "contract SimpleTCR"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 352,
                        "name": "_registryName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "2040:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "2055:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        },
                        {
                          "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                          "typeString": "contract SimpleTCR"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 347,
                      "name": "_RegistryCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "1986:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$2762_$_t_contract$_ITCR20_$205_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IERC20,contract ITCR20,string memory,string memory)"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1986:82:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "EmitStatement",
                  "src": "1981:87:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 356,
                    "name": "registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 321,
                    "src": "2085:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "functionReturnParameters": 319,
                  "id": 357,
                  "nodeType": "Return",
                  "src": "2078:15:2"
                }
              ]
            },
            "documentation": "Create a new SimpleTCR (with the associated Bonded Token and Voting contracts)\n@dev ~ 2850000 gas\n@param _tokenName The name of the associated Token (usually the same name of the Registry)\n@param _decimals The number of decimals (eg: 18) of the associated Token\n@param _symbol The symbol (eg: DT-RBT) of the associated Token\n@param _parameters Initial parameters: [minDeposit, applyStageLength, voteStageLength, dispensationPct]\n@param _registryName Main name of the registry\n@param _description description of the registry\n@param _acceptedDataType accepted data type of the registry\n@return The created Registry",
            "id": 359,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "newSimpleTCR",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "_tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1304:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1331:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1356:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 309,
                  "name": "_parameters",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1380:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 307,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1380:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 308,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1380:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 311,
                  "name": "_registryName",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1408:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1438:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 315,
                  "name": "_acceptedDataType",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1467:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1294:203:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1514:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITCR20_$205",
                    "typeString": "contract ITCR20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 317,
                    "name": "ITCR20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 205,
                    "src": "1514:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITCR20_$205",
                      "typeString": "contract ITCR20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1513:8:2"
            },
            "scope": 388,
            "src": "1273:827:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 377,
              "nodeType": "Block",
              "src": "2318:120:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 366,
                      "name": "baseRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "2328:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                        "typeString": "contract SimpleTCR"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 367,
                      "name": "_newRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "2343:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                        "typeString": "contract SimpleTCR"
                      }
                    },
                    "src": "2328:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "2328:27:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "626173655265676973747279",
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2393:14:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6dc281eb62683932c70982f944e91eaac606e511a2f4066902382b18075c5ac9",
                          "typeString": "literal_string \"baseRegistry\""
                        },
                        "value": "baseRegistry"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 373,
                            "name": "_newRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "2417:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                              "typeString": "contract SimpleTCR"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                              "typeString": "contract SimpleTCR"
                            }
                          ],
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2409:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2409:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6dc281eb62683932c70982f944e91eaac606e511a2f4066902382b18075c5ac9",
                          "typeString": "literal_string \"baseRegistry\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 370,
                      "name": "_BasicParameterUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "2370:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2370:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "EmitStatement",
                  "src": "2365:66:2"
                }
              ]
            },
            "documentation": "Set the base Registry to be use in all future Registry creations\n@param _newRegistry Any Registry implementation",
            "id": 378,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 364,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 363,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2805,
                  "src": "2299:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2299:9:2"
              }
            ],
            "name": "setBaseRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "name": "_newRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "2275:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                    "typeString": "contract SimpleTCR"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 360,
                    "name": "SimpleTCR",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2075,
                    "src": "2275:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2274:24:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2318:0:2"
            },
            "scope": 388,
            "src": "2250:188:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "2818:893:2",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "newContract": {
                        "declaration": 383,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3559:11:2",
                        "valueSize": 1
                      }
                    },
                    {
                      "newContract": {
                        "declaration": 383,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3637:11:2",
                        "valueSize": 1
                      }
                    },
                    {
                      "_target": {
                        "declaration": 380,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3118:7:2",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 385,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let contractCode := mload(0x40)\n    mstore(add(contractCode, 0x0b), _target)\n    mstore(sub(contractCode, 0x09), 0x000000000000000000603160008181600b9039f3600080808080368092803773)\n    mstore(add(contractCode, 0x2b), 0x5af43d828181803e808314602f57f35bfd000000000000000000000000000000)\n    newContract := create(0, contractCode, 60)\n    if iszero(extcodesize(newContract))\n    {\n        revert(0, 0)\n    }\n}",
                  "src": "2828:883:2"
                }
              ]
            },
            "documentation": "Deploy a Copy of a contract supplied\n@dev THIS COULD BE REPLACED WITH A \"new Target()\" BUT FOR SOME REASON CONSUMES A LOT OF MORE GAS IN DEPLOYMENT\n@param _target The base contract to me copy\n@return newContract address of the new deployed contract",
            "id": 387,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deployNewRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "2764:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2764:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2763:17:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 383,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "2798:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2797:21:2"
            },
            "scope": 388,
            "src": "2737:974:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 389,
        "src": "86:3627:2"
      }
    ],
    "src": "0:3716:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/ramirogonzalez/Xivis/sandbox/blockchain/opencurator/contracts/RegistryFactory.sol",
    "exportedSymbols": {
      "RegistryFactory": [
        388
      ]
    },
    "id": 389,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 264,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/ramirogonzalez/Xivis/sandbox/blockchain/opencurator/contracts/SimpleTCR.sol",
        "file": "./SimpleTCR.sol",
        "id": 265,
        "nodeType": "ImportDirective",
        "scope": 389,
        "sourceUnit": 2076,
        "src": "26:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ramirogonzalez/Xivis/sandbox/blockchain/opencurator/contracts/zeppelin/Ownable.sol",
        "file": "./zeppelin/Ownable.sol",
        "id": 266,
        "nodeType": "ImportDirective",
        "scope": 389,
        "sourceUnit": 2872,
        "src": "52:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 267,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2871,
              "src": "114:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2871",
                "typeString": "contract Ownable"
              }
            },
            "id": 268,
            "nodeType": "InheritanceSpecifier",
            "src": "114:7:2"
          }
        ],
        "contractDependencies": [
          2693,
          2871
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 388,
        "linearizedBaseContracts": [
          388,
          2871
        ],
        "name": "RegistryFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 280,
            "name": "_RegistryCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "indexed": false,
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "152:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "152:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 272,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "169:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2762",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 271,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2762,
                    "src": "169:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2762",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 274,
                  "indexed": false,
                  "name": "registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "183:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITCR20_$205",
                    "typeString": "contract ITCR20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 273,
                    "name": "ITCR20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 205,
                    "src": "183:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITCR20_$205",
                      "typeString": "contract ITCR20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 276,
                  "indexed": false,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "200:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "213:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "151:81:2"
            },
            "src": "129:104:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 286,
            "name": "_BasicParameterUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "indexed": false,
                  "name": "parameter",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "267:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "indexed": false,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "285:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "285:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "266:38:2"
            },
            "src": "238:67:2"
          },
          {
            "constant": false,
            "id": 288,
            "name": "baseRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 388,
            "src": "358:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SimpleTCR_$2075",
              "typeString": "contract SimpleTCR"
            },
            "typeName": {
              "contractScope": null,
              "id": 287,
              "name": "SimpleTCR",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2075,
              "src": "358:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                "typeString": "contract SimpleTCR"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 290,
            "name": "reserveToken",
            "nodeType": "VariableDeclaration",
            "scope": 388,
            "src": "393:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2762",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 289,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2762,
              "src": "393:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2762",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "523:45:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 295,
                      "name": "baseRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "533:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                        "typeString": "contract SimpleTCR"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 296,
                      "name": "_baseRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "548:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                        "typeString": "contract SimpleTCR"
                      }
                    },
                    "src": "533:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "533:28:2"
                }
              ]
            },
            "documentation": "@dev constructor deploys a new proxyFactory.",
            "id": 300,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "name": "_baseRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "491:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                    "typeString": "contract SimpleTCR"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 291,
                    "name": "SimpleTCR",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2075,
                    "src": "491:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:25:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:2"
            },
            "scope": 388,
            "src": "479:89:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "1522:578:2",
              "statements": [
                {
                  "assignments": [
                    321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 321,
                      "name": "registry",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "1563:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                        "typeString": "contract SimpleTCR"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 320,
                        "name": "SimpleTCR",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2075,
                        "src": "1563:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                          "typeString": "contract SimpleTCR"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 327,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 324,
                            "name": "baseRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "1612:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                              "typeString": "contract SimpleTCR"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                              "typeString": "contract SimpleTCR"
                            }
                          ],
                          "id": 323,
                          "name": "deployNewRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "1594:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) returns (address)"
                          }
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1594:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 322,
                      "name": "SimpleTCR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2075,
                      "src": "1584:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_SimpleTCR_$2075_$",
                        "typeString": "type(contract SimpleTCR)"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1563:63:2"
                },
                {
                  "assignments": [
                    329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 329,
                      "name": "tradableToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "1669:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                        "typeString": "contract ERC20Tradable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 328,
                        "name": "ERC20Tradable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2693,
                        "src": "1669:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 336,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 332,
                        "name": "_tokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "1717:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 333,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "1729:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 334,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 304,
                        "src": "1738:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1699:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20Tradable_$2693_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ERC20Tradable)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 330,
                        "name": "ERC20Tradable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2693,
                        "src": "1703:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        }
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1699:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                      "typeString": "contract ERC20Tradable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1669:79:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 340,
                        "name": "_registryName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "1895:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 341,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "1910:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 342,
                        "name": "_acceptedDataType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "1924:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "tradableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "1943:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "_parameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "1958:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 337,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "1881:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                          "typeString": "contract SimpleTCR"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 639,
                      "src": "1881:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address,uint256[] memory) external"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1881:89:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:89:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3014,
                          "src": "2003:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2003:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "tradableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "2015:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 351,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "2030:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                          "typeString": "contract SimpleTCR"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 352,
                        "name": "_registryName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "2040:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "2055:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Tradable_$2693",
                          "typeString": "contract ERC20Tradable"
                        },
                        {
                          "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                          "typeString": "contract SimpleTCR"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 347,
                      "name": "_RegistryCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "1986:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$2762_$_t_contract$_ITCR20_$205_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IERC20,contract ITCR20,string memory,string memory)"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1986:82:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "EmitStatement",
                  "src": "1981:87:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 356,
                    "name": "registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 321,
                    "src": "2085:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "functionReturnParameters": 319,
                  "id": 357,
                  "nodeType": "Return",
                  "src": "2078:15:2"
                }
              ]
            },
            "documentation": "Create a new SimpleTCR (with the associated Bonded Token and Voting contracts)\n@dev ~ 2850000 gas\n@param _tokenName The name of the associated Token (usually the same name of the Registry)\n@param _decimals The number of decimals (eg: 18) of the associated Token\n@param _symbol The symbol (eg: DT-RBT) of the associated Token\n@param _parameters Initial parameters: [minDeposit, applyStageLength, voteStageLength, dispensationPct]\n@param _registryName Main name of the registry\n@param _description description of the registry\n@param _acceptedDataType accepted data type of the registry\n@return The created Registry",
            "id": 359,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "newSimpleTCR",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "_tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1304:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1331:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1356:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 309,
                  "name": "_parameters",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1380:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 307,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1380:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 308,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1380:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 311,
                  "name": "_registryName",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1408:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1438:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 315,
                  "name": "_acceptedDataType",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1467:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1294:203:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "1514:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITCR20_$205",
                    "typeString": "contract ITCR20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 317,
                    "name": "ITCR20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 205,
                    "src": "1514:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITCR20_$205",
                      "typeString": "contract ITCR20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1513:8:2"
            },
            "scope": 388,
            "src": "1273:827:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 377,
              "nodeType": "Block",
              "src": "2318:120:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 366,
                      "name": "baseRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "2328:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                        "typeString": "contract SimpleTCR"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 367,
                      "name": "_newRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "2343:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                        "typeString": "contract SimpleTCR"
                      }
                    },
                    "src": "2328:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "2328:27:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "626173655265676973747279",
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2393:14:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6dc281eb62683932c70982f944e91eaac606e511a2f4066902382b18075c5ac9",
                          "typeString": "literal_string \"baseRegistry\""
                        },
                        "value": "baseRegistry"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 373,
                            "name": "_newRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "2417:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                              "typeString": "contract SimpleTCR"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                              "typeString": "contract SimpleTCR"
                            }
                          ],
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2409:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2409:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6dc281eb62683932c70982f944e91eaac606e511a2f4066902382b18075c5ac9",
                          "typeString": "literal_string \"baseRegistry\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 370,
                      "name": "_BasicParameterUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "2370:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2370:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "EmitStatement",
                  "src": "2365:66:2"
                }
              ]
            },
            "documentation": "Set the base Registry to be use in all future Registry creations\n@param _newRegistry Any Registry implementation",
            "id": 378,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 364,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 363,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2805,
                  "src": "2299:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2299:9:2"
              }
            ],
            "name": "setBaseRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "name": "_newRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "2275:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                    "typeString": "contract SimpleTCR"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 360,
                    "name": "SimpleTCR",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2075,
                    "src": "2275:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleTCR_$2075",
                      "typeString": "contract SimpleTCR"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2274:24:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2318:0:2"
            },
            "scope": 388,
            "src": "2250:188:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "2818:893:2",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "newContract": {
                        "declaration": 383,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3559:11:2",
                        "valueSize": 1
                      }
                    },
                    {
                      "newContract": {
                        "declaration": 383,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3637:11:2",
                        "valueSize": 1
                      }
                    },
                    {
                      "_target": {
                        "declaration": 380,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3118:7:2",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 385,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let contractCode := mload(0x40)\n    mstore(add(contractCode, 0x0b), _target)\n    mstore(sub(contractCode, 0x09), 0x000000000000000000603160008181600b9039f3600080808080368092803773)\n    mstore(add(contractCode, 0x2b), 0x5af43d828181803e808314602f57f35bfd000000000000000000000000000000)\n    newContract := create(0, contractCode, 60)\n    if iszero(extcodesize(newContract))\n    {\n        revert(0, 0)\n    }\n}",
                  "src": "2828:883:2"
                }
              ]
            },
            "documentation": "Deploy a Copy of a contract supplied\n@dev THIS COULD BE REPLACED WITH A \"new Target()\" BUT FOR SOME REASON CONSUMES A LOT OF MORE GAS IN DEPLOYMENT\n@param _target The base contract to me copy\n@return newContract address of the new deployed contract",
            "id": 387,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deployNewRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "2764:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2764:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2763:17:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 383,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "2798:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2797:21:2"
            },
            "scope": 388,
            "src": "2737:974:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 389,
        "src": "86:3627:2"
      }
    ],
    "src": "0:3716:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "2": {
      "events": {},
      "links": {},
      "address": "0x8fa5a5cc3ce59ead91197fb7bb232bfa9b43fe91",
      "transactionHash": "0x194dce1c4a521dbecf7f0b53df20bea8fd51de717a0fabcd9ad9f551f8c767e0"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0x5eaa2f49e0a8d91bdfdd26a6595964b38395519c",
      "transactionHash": "0xfd1abcc03d77c4189db5ef1797c68c6d18cccedd62304e674aa89f1304577d6f"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0da42d3ca29b5943c09e26ff04f5cd86f72faee4",
      "transactionHash": "0x126279ab3701d9818aecf84e5be7c1f69ede6e6a3edf7c91346984ba209cb0e6"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2019-02-17T13:56:05.559Z"
}